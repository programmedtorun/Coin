--> tokenomics scanner => volume sensor (use cmc coin_analysis.data get_financials())
--> organize project (patrick's code)
--> add tokenomics scanner output to whale_conf.json
--> make mapping file symbol ==> contract hash (can be python structure, might be faster than reading in json)
--> think about tools and reseach methods suppo and coin bureau use and how to incorporate into our scanners/analyzers
      - i.e. glassnode, coin marketCAL
--> Add red alert text if there are 2 or more big buys in a row
--> figure out why program is crashing (ran for 140 min and got a request and/or query error)
--> have walt review whale_watch_app.py code (scheduling and general behavior and organization)
--> integrate all apps and feeds, python files patrick has created into gitlab repo walt is using
--> potentially add logging, though already have output files
--> send walt all .gitignore files (API key files etc)
       - .gitignore files list is:
                -  .DS_Store
                -  .idea/
                -  YTD_API.json
                -  CC_API_KEY_FILE.json
                -  BLOXY_API.json
                -  TWILIO_STUFF.json
                -  ES_API_KEY_FILE.json
                -  CMC_API_KEY_FILE.json
                -  TW_KEY_FILE.json
                -  cmc_master_list.json
                -  cc_master_list.json
                -  whale_output.txt
                -  whale_error.txt
                -  output.txt
                -  error.txt
                -  venv/
                -  __pycache__


